/* eslint-env jest */
jest.mock('fs');

import fs from 'fs';
import loader from '../index';

const STYLE_LOADER_OUTPUT = `
// imports


// module
exports.push([module.id, ".followUps__app-components-FollowUpPage-styles__2BmYx {\n  background: #FFF;\n}\n", "", {"version":3,"sources":["/./app/components/FollowUpPage/styles.css"],"names":[],"mappings":"AAAA;EACE,iBAAiB;CAClB","file":"styles.css","sourcesContent":[".followUps {\n  background: #FFF;\n}\n"],"sourceRoot":"webpack://"}]);

// exports
exports.locals = {
"followUps": "followUps__app-components-FollowUpPage-styles__2BmYx"
};
`;

fit('emit a test.css.flow file with correct content', () => {
  const returnedContent = loader.call(
    {
      resourcePath: 'test.css',
    },
    STYLE_LOADER_OUTPUT
  );

  expect(fs.writeFile.mock.calls.length).toBe(1);
  expect(fs.writeFile.mock.calls[0][0]).toBe('test.css.flow');

  expect(fs.writeFile.mock.calls[0][1]).toBe(
    `/* This file is automatically generated by css-modules-flow-typed. */
// @flow
declare module.exports: {|
  +'followUps': string;
|};
`
  );
  expect(returnedContent).toBe(STYLE_LOADER_OUTPUT);
});

it('returns same content as given', () => {
  const emitFile = jest.fn();
  const returnedContent = loader.call(
    {
      resourcePath: 'test.css',
      emitFile,
    },
    STYLE_LOADER_OUTPUT
  );
  expect(returnedContent).toBe(STYLE_LOADER_OUTPUT);
});
